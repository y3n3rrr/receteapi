// <auto-generated />
using System;
using EReceteAPI.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EReceteAPI.Database.Migrations
{
    [DbContext(typeof(EReceteDBContext))]
    partial class EReceteDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EReceteAPI.Database.Entities.Ilac", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad")
                        .HasMaxLength(255);

                    b.Property<string>("AdArama")
                        .HasMaxLength(500);

                    b.Property<string>("AtcAd")
                        .HasMaxLength(255);

                    b.Property<string>("AtcKod")
                        .HasMaxLength(255);

                    b.Property<long>("Barkod");

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedKurumKodu");

                    b.Property<long?>("CreatedRoleId");

                    b.Property<string>("FirmaAd")
                        .HasMaxLength(255);

                    b.Property<decimal?>("Fiyat")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("GeriOdeme");

                    b.Property<int?>("IlacReceteRengi");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<long?>("ReceteID");

                    b.Property<int?>("ReceteTuru");

                    b.Property<string>("RowGuid")
                        .HasMaxLength(36);

                    b.Property<string>("SessionId")
                        .HasMaxLength(36);

                    b.Property<long?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdatedKurumKodu");

                    b.Property<long?>("UpdatedRoleId");

                    b.Property<string>("UpdatedSessionId")
                        .HasMaxLength(36);

                    b.HasKey("Id");

                    b.HasIndex("ReceteID");

                    b.ToTable("Ilac","Skrs");
                });

            modelBuilder.Entity("EReceteAPI.Database.Entities.Recete", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<int?>("CreatedKurumKodu");

                    b.Property<long?>("CreatedRoleId");

                    b.Property<string>("ReceteNo");

                    b.Property<DateTime?>("ReceteTarih");

                    b.Property<int?>("ReceteTuru");

                    b.Property<string>("RowGuid")
                        .HasMaxLength(36);

                    b.Property<long?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<int?>("UpdatedKurumKodu");

                    b.Property<long?>("UpdatedRoleId");

                    b.HasKey("ID");

                    b.ToTable("Recete","Muayene");
                });

            modelBuilder.Entity("EReceteAPI.Database.Entities.Users", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad")
                        .HasMaxLength(255);

                    b.Property<string>("CepTelefonu")
                        .HasMaxLength(255);

                    b.Property<string>("DiplomaNo")
                        .HasMaxLength(255);

                    b.Property<string>("Email")
                        .HasMaxLength(255);

                    b.Property<string>("EsaglikPassword")
                        .HasColumnName("ESaglikPassword")
                        .HasMaxLength(255);

                    b.Property<string>("MernisSifresi")
                        .HasMaxLength(255);

                    b.Property<string>("Password")
                        .HasMaxLength(255);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(255);

                    b.Property<string>("Sgksifresi")
                        .HasColumnName("SGKSifresi")
                        .HasMaxLength(255);

                    b.Property<string>("Soyad")
                        .HasMaxLength(255);

                    b.Property<long>("TckimlikNo")
                        .HasColumnName("TCKimlikNo");

                    b.Property<string>("UserName")
                        .HasMaxLength(255);

                    b.HasKey("ID");

                    b.ToTable("Users","Yetkilendirme");
                });

            modelBuilder.Entity("EReceteAPI.Database.Entities.Ilac", b =>
                {
                    b.HasOne("EReceteAPI.Database.Entities.Recete")
                        .WithMany("Ilaclar")
                        .HasForeignKey("ReceteID");
                });
#pragma warning restore 612, 618
        }
    }
}
